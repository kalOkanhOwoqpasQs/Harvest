for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        index = i
    end
end

mode = bot[index].mode
startfrom = bot[index].startfrom
slot = bot[index].slot
farmList = bot[index].farmList
idList = bot[index].idList
webhook = bot[index].webhooktask.link
message = bot[index].webhooktask.messageid
indexx = 1
local iTile = 0
local bTile = 0
local cTile = 0
local dTile = 0
local pTile = 0
local xTile = 0
wirz = {}
kelaz = {}
treez = {}
ak = setting.drop.seed.x - 1
wir = setting.drop.seed.y - 1
kiw = setting.drop.pack.x - 1
wirs = setting.drop.pack.y - 1
mang = setting.drop.block.x - 1
eak = setting.drop.block.y - 1
bar = setting.drop.event.x - 1
nich = setting.drop.event.y - 1
blockk = 1
seedd = 1
packkk = 1
eventt = 1
bajigur = ""

function waduh()
    if findItem(setting.item.block) > 0 then
        sendPacket("action|trash\n|itemID|" .. setting.item.block,2)
        sleep(2000)
        sendPacket("action|dialog_return\ndialog_name|trash_item\nitemID|" .. setting.item.block .. "|\ncount|" .. findItem(setting.item.block),2)
        sleep(2000)
    end
end

function round(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

function wirrz()
    bajigur = ""
	for i = 1, #setting.storage.block.world do
		bajigur = bajigur.."\n||"..string.upper(setting.storage.block.world[i]).."|| "..(wirz[setting.storage.block.world[i]] or "?")..""
    end
    return bajigur
end

function wirrzz()
    bajigur = ""
	for i = 1, #setting.storage.seed.world do
		bajigur = bajigur.."\n||"..string.upper(setting.storage.seed.world[i]).."|| "..(wirz[setting.storage.seed.world[i]] or "?")..""
    end
    return bajigur
end

function wirrzzz()
    bajigur = ""
	for i = 1, #setting.storage.pack.world do
		bajigur = bajigur.."\n||"..string.upper(setting.storage.pack.world[i]).."|| "..(wirz[setting.storage.pack.world[i]] or "?")..""
    end
    return bajigur
end

function wirrzzzz()
    bajigur = ""
	for i = 1, #setting.storage.event.world do
		bajigur = bajigur.."\n||"..string.upper(setting.storage.event.world[i]).."|| "..(wirz[setting.storage.event.world[i]] or "?")..""
    end
    return bajigur
end

function wirrcuyy()
    bajigur = ""
	for i = 1, #farmList do
		bajigur = bajigur.."\n"..(treez[farmList[i]] or "?")..""
	end
	return bajigur
end

function wirrcuy()
    bajigur = ""
	for i = 1, #farmList do
		bajigur = bajigur.."\n||"..string.upper(farmList[i]).."||"
	end
	return bajigur
end

function wirrbru()
    bajigur = ""
	for i = 1, #farmList do
		bajigur = bajigur.."\n"..(kelaz[farmList[i]] or "???")..""
    end
    return bajigur
end

function webcuy(info,link,id)
	if setting.webhook.access then
        local text = [[
            $webHookUrl = "]]..link..[[/messages/]]..id..[["
            $payload = @{
                username = "BizzantiuM's"
                embeds = @(
                    @{
                        title = "AUTO HARVEST v1.3[]]..string.upper(setting.typeMode)..[[]"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."```RUNNING``` : [ ```"..alamak(os.difftime(os.time(),st)).."``` ]"..[["
                                inline = "false"
                            }
                            @{
                                name = "BOT INFO"
                                value = "]].."```TASK``` : ```"..info.."```\n```NAME / SLOT``` : [ ```"..getBot().name.."``` ] / [ ```"..slot.."```]\n```CURRENT`` : [ ||"..getBot().world.."|| ]\n```LEVEL``` : [ ```"..getBot().level.."``` ]\n```STATUS``` : [ ```"..string.upper(getBot().status).."``` ]\n```GEMS``` : [ ```"..getBot().gems.."```]"..[["
                                inline = "false"
                            }
                            @{
                                name = "STORAGE"
                                value = "]]..""..[["
                                inline = "false"
                            }
                            @{
                                name = "BLOCK"
                                value = "]]..wirrz()..[["
                                inline = "false"
                            }
                            @{
                                name = "SEED"
                                value = "]]..wirrzz()..[["
                                inline = "true"
                            }
                            @{
                                name = "PACK"
                                value = "]]..wirrzzz()..[["
                                inline = "true"
                            }
                            @{
                                name = "EVENT"
                                value = "]]..wirrzzzz()..[["
                                inline = "true"
                            }
                            @{
                                name = "WORLD STATIC"
                                value = "]]..""..[["
                                inline = "false"
                            }
                            @{
                                name = "FARM"
                                value = "]]..wirrcuy()..[["
                                inline = "true"
                            }
                            @{
                                name = "TREE READY"
                                value = "]]..wirrcuyy()..[["
                                inline = "true"
                            }
                            @{
                                name = "ESTIMATE"
                                value = "]]..wirrbru()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                        }
                    }
                )
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

function infokand(link,text)
    if setting.webhook.access then
        text = [[
            $webHookUrl = "]]..link..[["
            $payload = @{
                content = "]]..text..[["
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

st = os.time()
function alamak(secs)
	local seconds = tonumber(secs)
	if seconds <= 0 then
	  	return "00:00:00";
	else
	  	h = string.format("%02.f", math.floor(secs/3600));
		m = string.format("%02.f", math.floor(secs/60 - (h*60)));
	  	s = string.format("%02.f", math.floor(secs - h*3600 - m *60));
	  	return ""..h.." : "..m.." : "..s
	end
end

function warp(world,id)
    bz = world
    if door then
        bz = bz .. "|" .. door
    end
    if getBot().world ~= string.upper(world) then
        addHook('onvariant','nuked',function (varlist)
            if varlist[0] == 'OnConsoleMessage' then
                if string.find(varlist[1],'inaccessible.') then
                    nuked = true
                end
            end
        end)
        while getBot().world ~= string.upper(world) and not nuked do
            sendPacket('action|join_request\nname|'..bz..'\ninvitedWorld|0',3)
            sleep(setting.delay.warp)
        end
        removeHooks()
        sleep(1000)
    end
    if door and getBot().world == string.upper(world) then
        local stuck = 0
        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
            sendPacket("action|join_request\nname|"..world:upper()..'|'..id:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if stuck == 5 then
                wrong = true
            else
                stuck = stuck + 1
            end
        end
    end
end

function reconnect(world,id,x,y)
    if getBot().world == "EXIT" then 
        infokand(setting.webhook.status,"[ ||"..getBot().name.."|| ] stuck EXIT ??, trying to join world again !! @everyone")
        sleep(100)
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
        end
        if id ~= "" then
            if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
                repeat
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                until getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(100)
            end
        end
        infokand(setting.webhook.status,"[ ||"..getBot().name.."|| ] success to joining world !! @everyone")
        sleep(100)
    end
    if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
        infokand(setting.webhook.status,"Got killed by foreigners??")
        sleep(100)
        repeat
            sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
            sleep(setting.delay.warp)
        until getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(100)
            end
        end
        infokand(setting.webhook.status,"Bot already back to pos")
        sleep(100)
    end
    if getBot().status ~= "online" then
        infokand(setting.webhook.status,''..getBot().name..' status is '..getBot().status..' ! @everyone')
        sleep(150)
        if getBot().status ~= "online" then
            repeat
            connect()
            sleep(setting.delay.reconnect)
            until getBot().status == "online"
        end
        while getBot().world ~= world:upper() do
            sendPacket('action|join_request\nname|'..world:upper()..'\ninvitedWorld|0',3)
            sleep(setting.delay.warp)
        end
        if id ~= '' then
            if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
                repeat
                sendPacket('action|join_request\nname|' ..world:upper()..'|'..id:upper()..'\ninvitedWorld|0', 3)
                sleep(setting.delay.warp)
                until getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        infokand(setting.webhook.status,''..getBot().name..' status is '..getBot().status..' ! @everyone')
        sleep(150)
    end
end

function gscan(id)
	local count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

function checker(world)
    wir = 0
    while getBot().world ~= world:upper() and not nuked do
        sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
        sleep(setting.delay.warp)
        if wir == 25 then
            nuked = true
        else
            wir = wir + 1
        end
    end
end

function clears()
    webcuy("Clearing world history",webhook,message)
    for _, wir in pairs(setting.mode.world) do
        checker(wir)
        sleep(100)
    end
end

function buy(worlds)
	buying = 0
    while findItem(112) >= setting.pack.mingems do
        while getBot().slots < 36 do
            sendPacket('action|buy\nitem|upgrade_backpack',2)
            sleep(1000)
        end
        for i = 1, setting.pack.maxbuy do
            if findItem(112) > setting.pack.price then
                sendPacket('action|buy\nitem|'..setting.pack.debug,2)
                sleep(1000)
                buying = buying + 1
            else
                break
            end
        end
        storePack()
    end
end

function storePack()
    for i = packkk , #setting.storage.pack.world do
        setJob('Storing packs')
        world = setting.storage.pack.world[i]
        door = setting.storage.pack.door
        warp(world,door)
        webcuy("Storing packs",webhook,message)
        if not nuked then
            if not wrong then
                if gscan(setting.pack.packList[1]) >= setting.storage.pack.limit then
                    wirz[world] = "["..gscan(setting.pack.packList[1]).."] LIMIT !!!"
                    infokand(setting.webhook.status,'[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
                    packkk = packkk + 1
                    if packkk > #setting.storage.pack.world then
                        infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                        if setting.mode.removeBot then
                            removeBot(getBot().name)
                            sleep(100)
                        end
                        error()
                    end
                    cTile = 0
                else
                    for y,pack in pairs(setting.pack.packList) do
                        for i,tile in pairs(getTiles()) do
                            if setting.mode.separated then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::packzz::
                                    findPath(kiw + (cTile),wirs - (y-1))
                                    sleep(1000)
                                    local count = 0
                                    reconnect(world,door,kiw + (cTile),wirs - (y-1))
                                    if kiw + (cTile) >= 98 then
                                        wirs = wirs - 1
                                        cTile = 0
                                    end
                                    while findItem(pack) > 0 do
                                        drop(pack)
                                        sleep(setting.delay.drop)
                                        reconnect(world,door,kiw + (cTile - 1),wirs - (y-1))
                                        count = count + 1
                                        if count >= 2 then
                                            cTile = cTile + 1
                                            goto packzz
                                        end
                                    end
                                    
                                end
                                if findItem(pack) == 0 then
                                    break
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::packz::
                                    findPath(kiw + (cTile),wirs)
                                    sleep(1000)
                                    local count = 0
                                    reconnect(world,door,kiw + (cTile),wirs)
                                    if kiw + (cTile) >= 98 then
                                        wirs = wirs - 1
                                        cTile = 0
                                    end
                                    while findItem(pack) > 0 do
                                        drop(pack)
                                        sleep(setting.delay.drop)
                                        reconnect(world,door,kiw + (cTile),wirs)
                                        count = count + 1
                                        if count >= 2 then
                                            cTile = cTile + 1
                                            goto packz
                                        end
                                    end
                                end
                                if findItem(pack) == 0 then
                                    break
                                end
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                wirz[world] = "WRONG DOOR !!!"
                wrong = false
                sleep(1000)
                print("Id door storage special event is wrong, check ur id door !!")
                infokand(setting.webhook.status,"Id door storage special event is wrong, check ur id door !! @everyone")
                eventt = eventt + 1
                if eventt > #setting.storage.event.world then
                    print("ALL STORAGE SPECIAL EVENT IS REACHED LIMIT !!!")
                    infokand(setting.webhook.status,"ALL STORAGE SPECIAL EVENT IS REACHED LIMIT !!! @everyone")
                    if setting.mode.removeBot then
                        removeBot(getBot().name)
                        sleep(100)
                    end
                    error()
                end
                cTile = 0
            end
        else
            wirz[world] = "NUKED !!!"
            nuked = false
            sleep(1000)
            print("Storage packs is NUKED, check ur storage !!")
            infokand(setting.webhook.status,"Storage packs is NUKED, check ur storage !! @everyone")
            packkk = packkk + 1
            if packkk > #setting.storage.pack.world then
                print("ALL STORAGE SPECIAL EVENT IS REACHED LIMIT !!!")
                infokand(setting.webhook.status,"ALL STORAGE SPECIAL EVENT IS REACHED LIMIT !!! @everyone")
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
            cTile = 0
        end
    end
    wirz[world] = "["..gscan(setting.pack.packList[1]).."]"
    setJob(setting.typeMode)
    if setting.mode.clearhistory then
        clears()
    end
end


function spevent(worlds)
    for i = eventt , #setting.storage.event.world do
        setJob('Storing special items')
        world = setting.storage.event.world[i]
        door = setting.storage.event.door
        warp(world,door)
        webcuy("Storing special items",webhook,message)
        if not nuked then
            if not wrong then
                if gscan(setting.item.event[1]) >= setting.storage.event.limit then
                    wirz[world] = "["..gscan(setting.item.event[1]).."] LIMIT !!!"
                    infokand(setting.webhook.status,'[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
                    eventt = eventt + 1
                    if eventt > #setting.storage.event.world then
                        infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                        if setting.mode.removeBot then
                            removeBot(getBot().name)
                            sleep(100)
                        end
                        error()
                    end
                    dTile = 0
                else
                    for y,items in pairs(setting.item.event) do
                        for i,tile in pairs(getTiles()) do
                            if setting.mode.separated then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::iye::
                                    findPath(bar + (dTile),nich - (y-1))
                                    sleep(1000)
                                    local count = 0
                                    reconnect(world,door,bar + (dTile),nich - (y-1))
                                    if bar + (dTile) >= 98 then
                                        nich = nich - 1
                                        dTile = 0
                                    end
                                    while findItem(items) > 0 do
                                        drop(items)
                                        sleep(setting.delay.drop)
                                        reconnect(world,door,bar + (dTile - 1),nich - (y-1))
                                        count = count + 1
                                        if count >= 2 then
                                            dTile = dTile + 1
                                            goto iye
                                        end
                                    end
                                end
                                if findItem(items) == 0 then
                                    break
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::alamaks::
                                    findPath(bar + (dTile),nich)
                                    sleep(1000)
                                    local count = 0
                                    reconnect(world,door,bar + (dTile),nich)
                                    if bar + (dTile) >= 98 then
                                        nich = nich - 1
                                        dTile = 0
                                    end
                                    while findItem(items) > 0 do
                                        drop(items)
                                        sleep(setting.delay.drop)
                                        reconnect(world,door,bar + (dTile),nich)
                                        count = count + 1
                                        if count >= 2 then
                                            dTile = dTile + 1
                                            goto alamaks
                                        end
                                    end
                                end
                                if findItem(items) == 0 then
                                    break
                                end
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                wirz[world] = "WRONG DOOR !!!"
                wrong = false
                sleep(1000)
                print("Id door storage special event is wrong, check ur id door !!")
                infokand(setting.webhook.status,"Id door storage special event is wrong, check ur id door !! @everyone")
                eventt = eventt + 1
                if eventt > #setting.storage.event.world then
                    print("ALL STORAGE SPECIAL EVENT IS REACHED LIMIT !!!")
                    infokand(setting.webhook.status,"ALL STORAGE SPECIAL EVENT IS REACHED LIMIT !!! @everyone")
                    if setting.mode.removeBot then
                        removeBot(getBot().name)
                        sleep(100)
                    end
                    error()
                end
                dTile = 0
            end
        else
            wirz[world] = "NUKED !!!"
            nuked = false
            sleep(1000)
            print("Storage special event is NUKED, check ur storage !!")
            infokand(setting.webhook.status,"Storage special event is NUKED, check ur storage !! @everyone")
            eventt = eventt + 1
            if eventt > #setting.storage.event.world then
                print("ALL STORAGE SPECIAL EVENT IS REACHED LIMIT !!!")
                infokand(setting.webhook.status,"ALL STORAGE SPECIAL EVENT IS REACHED LIMIT !!! @everyone")
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
            dTile = 0
        end
    end
    wirz[world] = "["..gscan(setting.item.event[1]).."]"
    setJob(setting.typeMode)
    if setting.mode.clearhistory then
        clears()
    end
end

function dropwir(worlds)
    for i = blockk , #setting.storage.block.world do
        setJob('Storing Blocks')
        world = setting.storage.block.world[i]
        door = setting.storage.block.door
        warp(world,door)
        webcuy("Storing blocks",webhook,message)
        if not nuked then
            if not wrong then
                if gscan(setting.item.block) >= setting.storage.block.limit then
                    wirz[world] = "["..gscan(setting.item.block).."] LIMIT !!!"
                    infokand(setting.webhook.status,'[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
                    blockk = blockk + 1
                    if blockk > #setting.storage.block.world then
                        infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                        if setting.mode.removeBot then
                            removeBot(getBot().name)
                            sleep(100)
                        end
                        error()
                    end
                    iTile = 0
                else
                    for i,tile in pairs(getTiles()) do
                        if tile.bg == 0 or tile.fg == 0 then
                            ::back::
                            findPath(mang + (iTile),eak)
                            sleep(1000)
                            local count = 0
                            reconnect(world,door,mang + (iTile),eak)
                            if mang + (iTile) >= 98 then
                                eak = eak - 1
                                iTile = 0
                            end
                            while findItem(setting.item.block) > 0 do
                                drop(setting.item.block)
                                sleep(setting.delay.drop)
                                reconnect(world,door,mang + (iTile),eak)
                                count = count + 1
                                if count >= 2 then
                                    iTile = iTile + 1
                                    goto back
                                end
                            end
                        end
                        if findItem(setting.item.block) == 0 then
                            break
                        end
                    end
                    sleep(100)
                    break
                end
            else
                wirz[world] = "WRONG DOOR !!!"
                wrong = false
                sleep(1000)
                print("Id door storage blocks is wrong, check ur id door !!")
                infokand(setting.webhook.status,"Id door storage blocks is wrong, check ur id door !! @everyone")
                blockk = blockk + 1
                if blockk > #setting.storage.block.world then
                    print("ALL STORAGE IS REACHED LIMIT !!!")
                    infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                    if setting.mode.removeBot then
                        removeBot(getBot().name)
                        sleep(100)
                    end
                    error()
                end
                iTile = 0
            end
        else
            wirz[world] = "NUKED !!!"
            nuked = false
            sleep(1000)
            print("Storage blocks is NUKED, check ur storage !!")
            infokand(setting.webhook.status,"Storage blocks is NUKED, check ur storage !! @everyone")
            blockk = blockk + 1
            if blockk > #setting.storage.block.world then
                print("ALL STORAGE IS REACHED LIMIT !!!")
                infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
            iTile = 0
        end
    end
    wirz[world] = "["..gscan(setting.item.block).."]"
    setJob(setting.typeMode)
    if setting.mode.clearhistory then
        clears()
    end
end

function dropwirs(worlds)
    for i = seedd , #setting.storage.seed.world do
        setJob('Storing Seeds')
        world = setting.storage.seed.world[i]
        door = setting.storage.seed.door
        warp(world,door)
        webcuy("Storing seeds",webhook,message)
        if not nuked then
            if not wrong then
                if gscan(setting.item.seed) >= setting.storage.seed.limit then
                    wirz[world] = "["..gscan(setting.item.seed).."] LIMIT !!!"
                    print(""..getBot().world.." has reached limit, skipped world")
                    infokand(setting.webhook.status,'[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
                    seedd = seedd + 1
                    if seedd > #setting.storage.seed.world then
                        print("ALL STORAGE IS REACHED LIMIT !!!")
                        infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                        if setting.mode.removeBot then
                            removeBot(getBot().name)
                            sleep(100)
                        end
                        error()
                    end
                    bTile = 0
                else
                    for i,tile in pairs(getTiles()) do
                        if tile.bg == 0 or tile.fg == 0 then
                            ::wirs::
                            findPath(ak + (bTile),wir)
                            sleep(1000)
                            local count = 0
                            reconnect(world,door,ak + (bTile),wir)
                            if ak + (bTile) >= 98 then
                                wir = wir - 1
                                iTile = 0
                            end
                            while findItem(setting.item.seed) > 0 do
                                drop(setting.item.seed)
                                sleep(setting.delay.drop)
                                reconnect(world,door,ak + (bTile),wir)
                                count = count + 1
                                if count >= 2 then
                                    bTile = bTile + 1
                                    goto wirs
                                end
                            end
                        end
                        if findItem(setting.item.seed) == 0 then
                            break
                        end
                    end
                    sleep(100)
                    break
                end
            else
                wirz[world] = "WRONG DOOR !!!"
                wrong = false
                sleep(1000)
                print("Id door storage seeds is wrong, check ur id door !!")
                infokand(setting.webhook.status,"Id door storage seeds is wrong, check ur id door !! @everyone")
                seedd = seedd + 1
                if seedd > #setting.storage.seed.world then
                    print("ALL STORAGE IS REACHED LIMIT !!!")
                    infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                    if setting.mode.removeBot then
                        removeBot(getBot().name)
                        sleep(100)
                    end
                    error()
                end
                bTile = 0
            end
        else
            wirz[world] = "NUKED !!!"
            nuked = false
            sleep(1000)
            print("Storage seeds is NUKED, check ur storage !!")
            infokand(setting.webhook.status,"Storage seeds is NUKED, check ur storage !! @everyone")
            seedd = seedd + 1
            if seedd > #setting.storage.seed.world then
                print("ALL STORAGE IS REACHED LIMIT !!!")
                infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
            bTile = 0
        end
    end
    wirz[world] = "["..gscan(setting.item.seed).."]"
    setJob(setting.typeMode)
    if setting.mode.clearhistory then
        clears()
    end
end

function cektree(worlds)
    webcuy("Checking trees",webhook,message)
    for i = 1,2 do
        for _, tile in pairs(getTiles()) do
            if tile.fg == setting.item.seed and tile.ready then
                treez[worlds] = ''..scanTrees(setting.item.seed)..''
                ::BACK::
                if findItem(setting.item.support.items) == 0 then
                    if setting.item.support.access then
                        pikex(worlds)
                        sleep(100)
                        door = idList
                        warp(worlds,door)
                        sleep(100)
                    end
                end
                if findItem(setting.item.block) > 180 then
                    if setting.item.recycle then
                        waduh()
                    else
                        dropwir(worlds)
                        door = idList
                        warp(worlds,door)
                        sleep(100)
                    end
                end
                if findItem(setting.item.event[1]) > setting.item.amount then
                    spevent(worlds)
                    door = idList
                    warp(worlds,door)
                    sleep(100)
                elseif findItem(setting.item.seed) > 180 then
                    dropwirs(worlds)
                    door = idList
                    warp(worlds,door)
                    sleep(100)
                elseif findItem(112) > setting.pack.mingems then
                    buy(worlds)
                    door = idList
                    warp(worlds,door)
                    sleep(100)
                end
                door = idList
                findPath(tile.x+(xTile),tile.y)
                sleep(setting.delay.harvest)
                reconnect(worlds,door,tile.x+(xTile),tile.y)
                local count = 0
                if getTile(tile.x,tile.y).fg == setting.item.seed then
                    punch(0,0)
                    sleep(setting.delay.harvest)
                    reconnect(worlds,door,tile.x+(xTile),tile.y)
                    count = count + 1
                    if count >= 3 then
                        xTile = xTile + 1
                        goto BACK
                    end
                end
                if setting.mode.ignoregems then
                    collect(setting.mode.range,112)
                else
                    collect(setting.mode.range)
                end
                sleep(25)
            end
        end
    end
    xTile = 0
end
                

function harvest(worlds)
    webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
    treez[worlds] = ''..scanTrees(setting.item.seed)..''
    if mode == 'up' then
        t1 = 99
        t2 = 0
        t3 = -1
        tiles = 0 
        for y = -1, 53 do
            for x = t1, t2, t3 do
                if getTile(x,y).fg == setting.item.seed and getTile(x,y).ready then
                    treez[worlds] = ''..scanTrees(setting.item.seed)..''
                    ::BACK::
                    if findItem(setting.item.support.items) == 0 then
                        if setting.item.support.access then
                            pikex(worlds)
                            sleep(100)
                            door = idList
                            warp(worlds,door)
                            sleep(100)
                            webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                        end
                    end
                    if findItem(setting.item.block) > 180 then
                        if setting.item.recycle then
                            waduh()
                        else
                            dropwir(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(100)
                            webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                        end
                    end
                    if findItem(setting.item.event[1]) > setting.item.amount then
                        spevent(worlds)
                        door = idList
                        warp(worlds,door)
                        sleep(150)
                        webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                    elseif findItem(setting.item.seed) > 180 then
                        dropwirs(worlds)
                        door = idList
                        warp(worlds,door)
                        sleep(150)
                        webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                    elseif findItem(112) > setting.pack.mingems then
                        buy(worlds)
                        door = idList
                        warp(worlds,door)
                        sleep(150)
                        webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                    end
                    door = idList
                    findPath(x+(pTile),y)
                    reconnect(worlds,door,x+(pTile),y)
                    local count = 0
                    if getTile(x,y).fg == setting.item.seed then
                        punch(0,0)
                        sleep(setting.delay.harvest)
                        reconnect(worlds,door,x+(pTile),y)
                        count = count + 1
                        if count >= 3 then
                            pTile = pTile + 1
                            goto BACK
                        end
                    end
                    if setting.mode.ignoregems then
                        collect(setting.mode.range,112)
                    else
                        collect(setting.mode.range)
                    end
                    sleep(25)
                end
            end
            if tiles == 1 then
                if t1 == 0 then
                    t1 = 99
                    t2 = 0
                    t3 = -1
                    tiles = 0
                elseif t1 == 99 then
                    t1 = 0
                    t2 = 99
                    t3 = 1
                    tiles = 0
                end
            elseif tiles == 0 then
                tiles = tiles + 1
            end
        end
    elseif mode == 'down' then
        t1 = 99
        t2 = 0
        t3 = -1
        tiles = 0
        for y = 53, 0, -1 do
            for x = t1, t2, t3 do
                if getTile(x,y).fg == setting.item.seed and getTile(x,y).ready then
                    treez[worlds] = ''..scanTrees(setting.item.seed)..''
                    ::BACK::
                    if findItem(setting.item.support.items) == 0 then
                        if setting.item.support.access then
                            pikex(worlds)
                            sleep(100)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                        end
                    end
                    if findItem(setting.item.block) > 180 then
                        if setting.item.recycle then
                            waduh()
                        else
                            dropwir(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(100)
                            webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                        end
                    end
                    if findItem(setting.item.event[1]) > setting.item.amount then
                        spevent(worlds)
                        door = idList
                        warp(worlds,door)
                        sleep(150)
                        webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                    elseif findItem(setting.item.seed) > 180 then
                        dropwirs(worlds)
                        door = idList
                        warp(worlds,door)
                        sleep(100)
                        webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                    elseif findItem(112) > setting.pack.mingems then
                        buy(worlds)
                        door = idList
                        warp(worlds,door)
                        sleep(150)
                        webcuy("Harvesting mode : "..string.upper(mode).."",webhook,message)
                    end
                    door = idList
                    findPath(x+(pTile),y)
                    reconnect(worlds,door,x+(pTile),y)
                    local count = 0
                    if getTile(x,y).fg == setting.item.seed then
                        punch(0,0)
                        sleep(setting.delay.harvest)
                        reconnect(worlds,door,x+(pTile),y)
                        count = count + 1
                        if count >= 3 then
                            pTile = pTile + 1
                            goto BACK
                        end
                    end
                    if setting.mode.ignoregems then
                        collect(setting.mode.range,112)
                    else
                        collect(setting.mode.range)
                    end
                    sleep(25)
                end
            end
            if tiles == 1 then
                if t1 == 0 then
                    t1 = 99
                    t2 = 0
                    t3 = -1
                    tiles = 0
                elseif t1 == 99 then
                    t1 = 0
                    t2 = 99
                    t3 = 1
                    tiles = 0
                end
            elseif tiles == 0 then
                tiles = tiles + 1
            end
        end
    end
    pTile = 0
end

function scanTrees(id)
    local count = 0
    for _, tile in pairs(getTiles()) do
        if tile.fg == id and tile.ready then
            count = count + 1
        end
    end
    return count
end	

function collecting(worlds)
    webcuy("Collect floating items",webhook,message)
    for _, obj in pairs(getObjects()) do
        if obj.id == setting.item.block then
            findPath(round(obj.x / 32),math.floor(obj.y / 32))
            if setting.mode.ignoregems then
                collect(setting.mode.range,112)
            else
                collect(setting.mode.range)
            end
            sleep(setting.delay.collect)
        end
        if findItem(setting.item.support.items) == 0 then
            if setting.item.support.access then
                pikex(worlds)
                sleep(100)
                door = idList
                warp(worlds,door)
                sleep(150)
                webcuy("Collect floating items",webhook,message)
            end
        end
        if findItem(setting.item.block) > 180 then
            if setting.item.recycle then
                waduh()
            else
                dropwir(worlds)
                door = idList
                warp(worlds,door)
                sleep(150)
                webcuy("Collect floating items",webhook,message)
            end
        end
        if findItem(setting.item.event[1]) > setting.item.amount then
            spevent(worlds)
            door = idList
            warp(worlds,door)
            sleep(150)
            webcuy("Collect floating items",webhook,message)
        elseif findItem(setting.item.seed) > 180 then
            dropwirs(worlds)
            door = idList
            warp(worlds,door)
            sleep(150)
            webcuy("Collecting",webhook,message)
        elseif findItem(112) > setting.pack.mingems then
            buy(worlds)
            door = idList
            warp(worlds,door)
            sleep(150)
            webcuy("Collect floating items",webhook,message)
        end
    end
end

function pikex(worlds)
    setJob("Take support items")
    sleep(100)
    world = setting.item.support.world
    door = setting.item.support.door
    warp(world,door)
    webcuy("Taking support items",webhook,message)
    if not nuked then
        if not wrong then
            if findItem(setting.item.support.items) == 0 and gscan(setting.item.support.items) >= setting.item.support.keep then
                for _, obj in pairs(getObjects()) do
                    if obj.id == setting.item.support.items then
                        findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                        sleep(1000)
                        collect(setting.mode.range)
                        sleep(1000)
                        if findItem(setting.item.support.items) > 0  then
                            move(-1,0)
                            sleep(1000)
                            wear(setting.item.support.items)
                            sleep(2000)
                            sendPacket("action|drop\n|itemID|"..setting.item.support.items.."",2)
                            sleep(2000)
                            sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|"..setting.item.support.items.."|\ncount|"..(findItem(setting.item.support.items) - setting.item.support.keep),2)
                            sleep(2000)
                            print("Success take and wear the support items !!")
                            infokand(setting.webhook.status,"Success take and wear the support items !! @everyone")
                            break
                        end
                    end
                end
            else
                print("Support item is empty, Drop the support item right now !!")
                infokand(setting.webhook.status,"Support item is empty, Drop the support item right now !! @everyone")
            end
        else
            print("Id door world take support items is wrong, check ur id door !!")
            infokand(setting.webhook.status,"Id door world take support items is wrong, check ur id door !! @everyone")
            error()
        end
    else
        print("World take support items is nuked, check ur world !!")
        infokand(setting.webhook.status,"World take support items is nuked, check ur world !! @everyone")
        error()
    end
end

if BizzantiuM.version == '1.5' and BizzantiuM.maker == 'akbarsht' then
    sleep(math.random(1000,10000))
    for i = startfrom,#farmList do
        door = idList
        setJob("Harvest")
        warp(farmList[i],door)
        webcuy("Running script mode : "..setting.typeMode.."",webhook,message)
        if not nuked then
            if not wrong then
                if setting.typeMode == 'harvest' then
                    harvest(farmList[i])
                    cektree(farmList[i])
                    collecting(farmList[i])
                elseif setting.typeMode == 'collect' then
                    collecting(farmList[i])
                end
                kelaz[farmList[i]] = "```"..alamak(os.difftime(os.time(),st)).."```"
            else
                kelaz[farmList[i]] = 'WRONG DOOR ID'
                treez[farmList[i]] = 'WRONG DOOR ID'
                wrong = false
                sleep(1000)
                print("||"..farmList[i].."|| is wrong door id, skipped world")
                infokand(setting.webhook.status,"||"..farmList[i].."|| is wrong door id, skipped world @everyone")
            end
        else
            kelaz[farmList[i]] = 'NUKED'
            treez[farmList[i]] = 'NUKED'
            nuked = false
            sleep(1000)
            print("||"..farmList[i].."|| is NUKED!, check ur world !!")
            infokand(setting.webhook.status,"||"..farmList[i].."|| is NUKED!, check ur world !! @everyone")
        end
    end
end    
print('ALREADY FINISHED ALL WORLD, Terminated script ! ')
infokand(setting.webhook.status,'[ ||'..getBot().name..'|| - '..slot..' ] ALREADY FINISHED ALL WORLD @everyone')
sleep(150)
if setting.mode.removeBot then
    removeBot(getBot().name)
    sleep(150)
end
error() 
