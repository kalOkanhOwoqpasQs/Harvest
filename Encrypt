mode = bot[getBot().name:upper()].mode
slot = bot[getBot().name:upper()].slot
startfrom = bot[getBot().name:upper()].startfrom
farmList = bot[getBot().name:upper()].farmList
idList = bot[getBot().name:upper()].idList
task = bot[getBot().name:upper()].task.link
messageid = bot[getBot().name:upper()].task.messageid
indexx = 1
local iTile = 0
local bTile = 0
local cTile = 0
local dTile = 0
wirz = {}
ak = setting.drop.seed.x - 1
wir = setting.drop.seed.y - 1
kiw = setting.drop.pack.x - 1
wirs = setting.drop.pack.y - 1
mang = setting.drop.block.x - 1
eak = setting.drop.block.y - 1
bar = setting.drop.event.x - 1
nich = setting.drop.event.y
blockk = 1
seedd = 1
packkk = 1
eventt = 1
bajigur = ""

function round(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

function scanItem()
    local count = {}
    for _,obj in pairs(getObjects()) do
        if count[obj.id] then
            count[obj.id].count = count[obj.id].count + obj.count
        else
            count[obj.id] = {id = obj.id, count = obj.count}
        end
    end
    local str = ''
    for _,string in pairs(count) do
        str = str..'\n'..itemInfo(string.id).name..' : '..string.count..' x'
    end
    return str
end

function wirrcuy()
    bajigur = ""
	for i = 1, #farmList do
		bajigur = bajigur.."\n||"..string.upper(farmList[i]).."||"
	end
	return bajigur
end

function wirrbru()
    bajigur = ""
	for i = 1, #farmList do
		bajigur = bajigur.."\n"..(wirz[farmList[i]] or "???")..""
    end
    return bajigur
end

function webcuy(info,id,link)
	if setting.webhook.access then
        local script = [[
            $webHookUrl = "]]..id..[[/messages/]]..link..[["
            $cpu = (Get-WmiObject win32_processor | Measure-Object -property LoadPercentage -Average | Select Average).Average
            $ram = (Get-Counter '\Memory\Available MBytes').CounterSamples.CookedValue
            $thumbnailObject = @{
                url = "https://cdn.discordapp.com/attachments/1122342991705673840/1128335180789207040/1689081173833.jpg"
            }
    	    $footerObject = @{
                text = "]].."Developed by BizzantiuM's\nLast updated : "..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..""..[["
	        }
    	    $fieldArray = @(
        	    @{
            	    name = "BOT INFO"
                    value = "]].."```TASK``` : [ ```"..info.."``` ]\n```NAME / SLOT``` : [ ||"..getBot().name.."|| ] / [ ```"..slot.."``` ]\n```WORLD``` : [ ||"..getBot().world.."|| ]\n```LEVEL``` : [ ```"..getBot().level.."``` ]\n```STATUS``` : [ ```"..getBot().status.."``` ]\n```GEMS``` : [ ```"..findItem(112).."``` ]\n```NOT READY``` : [ ```"..scanTree(setting.item.seed).."``` ]\n```CURRENT``` : [ ```"..startfrom.."``` ] / [ ```"..#farmList.."``` ]\n```RUNNING``` : [```"..alamak(os.difftime(os.time(),st)).."```]"..""..[["
	                inline = "false"
    	        }
        	    @{
            	    name = ""
                    value = "]]..""..[["
	                inline = "false"
    	        }
        	    @{
            	    name = "WORLD"
                	value = "]]..wirrcuy()..[["
	                inline = "true"
    	        }
        	    @{
            	    name = "ESTIMATE"
                	value = "]]..wirrbru()..[["
	                inline = "true"
    	        }
            )
            $embedObject = @{
                title = "AUTO HARVEST v1.2"
                color = "]]..math.random(1111111,9999999)..[["
                thumbnail = $thumbnailObject
                footer = $footerObject
                fields = $fieldArray
            }
            $embedArray = @($embedObject)
            $payload = @{
                embeds = $embedArray
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(script)
        pipe:close()
    end
end

function infokand(link,text)
    if setting.webhook.access then
        text = [[
            $webHookUrl = "]]..link..[["
            $payload = @{
                content = "]]..text..[["
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

st = os.time()
function alamak(secs)
	local seconds = tonumber(secs)
	if seconds <= 0 then
	  	return "00:00:00";
	else
	  	h = string.format("%02.f", math.floor(secs/3600));
		m = string.format("%02.f", math.floor(secs/60 - (h*60)));
	  	s = string.format("%02.f", math.floor(secs - h*3600 - m *60));
	  	return "HOURS : "..h..", MINUTES : "..m..", SECONDS :"..s
	end
end

function webpack(id,link)
	if setting.webhook.access then
	    local script = [[
    	    $webHookUrl = "]]..id..[[/messages/]]..link..[["
	        $cpu = (Get-WmiObject win32_processor | Measure-Object -property LoadPercentage -Average | Select Average).Average
    	    $ram = (Get-Counter '\Memory\Available MBytes').CounterSamples.CookedValue
			$thumbnailObject = @{
            	url = "https://cdn.discordapp.com/attachments/1122342991705673840/1128335180789207040/1689081173833.jpg"
	        }
    	    $footerObject = @{
                text = "]].."Developed by BizzantiuM's\nLast updated : "..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..""..[["
	        }
    	    $fieldArray = @(
        	    @{
            	    name = "STORAGE WORLD [HARVEST v1.2]"
                	value = "]].."```WORLD``` : [ ||"..getBot().world.."|| ]\n"..scanItem()..""..[["
	                inline = "false"
    	        }
        	)
	        $embedObject = @{
    	        color = "]]..math.random(1111111,9999999)..[["
        	    thumbnail = $thumbnailObject
            	footer = $footerObject
	            fields = $fieldArray
    	    }
        	$embedArray = @($embedObject)
        	$payload = @{
            	embeds = $embedArray
        	}
        	[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        	Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
    	]]
    	local pipe = io.popen("powershell -command -", "w")
    	pipe:write(script)
    	pipe:close()
	end
end


function warp(world,id)
    nuked = false
	join = 0
    bz = world
    if door then
        bz = bz .. "|" .. door
    end
    if getBot().world ~= string.upper(world) then
        while getBot().world ~= world:upper() and not nuked do
            sendPacket("action|join_request\nname|"..bz.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if join == 50 then
                print("World after : "..getBot().world.." is inacessible!, skipped world")
                sleep(e)
                infokand(setting.webhook.nuked,"```World after : "..getBot().world.." is inacessible``` @everyone")
                sleep(e)
                nuked = true
            else
                join = join + 1
            end
        end
        sleep(1000)
    end
    if door and getBot().world == string.upper(world) then
        local enter = 0
        if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not nuked then
            repeat
            sendPacket("action|join_request\nname|" ..bz.."\ninvitedWorld|0", 3)
            sleep(setting.delay.warp)
            if enter >= 5 then
				print("Wrong door id, terminated script")
                sleep(e)
                infokand(setting.webhook.nuked,"```Wrong door id, terminated script``` @everyone")
                sleep(e)
				error()
			else
				enter = enter + 1
			end
            until getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6
        end
    end
end

function reconnect(world,id,x,y)
    if getBot().status ~= 'online' then
        infokand(setting.webhook.status,'```Bot : '..getBot().name..' status is '..getBot().status..' !``` @everyone')
        sleep(150)
        while getBot().status ~= 'online' do
            connect()
            sleep(setting.delay.reconnect)
        end
        while getBot().world ~= world:upper() do
            sendPacket('action|join_request\nname|'..world:upper()..'\ninvitedWorld|0',3)
            sleep(setting.delay.warp)
        end
        if id ~= '' then
            if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
                repeat
                sendPacket('action|join_request\nname|' ..world:upper()..'|'..id:upper()..'\ninvitedWorld|0', 3)
                sleep(setting.delay.warp)
                until getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        infokand(setting.webhook.status,'```Bot : '..getBot().name..' status is '..getBot().status..' !``` @everyone')
        sleep(150)
    end
end

function gscan(id)
	local count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

function buy(worlds)
	buying = 0
    while findItem(112) >= setting.pack.mingems do
        while getBot().slots < 36 do
            sendPacket('action|buy\nitem|upgrade_backpack',2)
            sleep(1000)
        end
        if findItem(112) > setting.pack.price then
            sendPacket('action|buy\nitem|'..setting.pack.debug,2)
            sleep(1000)
            buying = buying + 1
        else
            break
        end
    end
    storePack()
end

function storePack()
    for y,pack in pairs(setting.pack.packList) do
        for i = packkk , #setting.storage.pack.world do
            setJob('Storing Packs')
            door = setting.storage.pack.door
            warp(setting.storage.pack.world[i],door)
            webcuy('Storing packs',task,messageid)
            if gscan(pack) >= setting.storage.pack.limit then
                infokand(setting.webhook.status,'[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
                packkk = packkk + 1
                if packkk > #setting.storage.pack.world then
                    infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                    if setting.mode.removeBot then
						removeBot(getBot().name)
						sleep(100)
					end
					error()
                end
            else
                if setting.mode.separated then
                    for i,tile in pairs(getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::packzz::
                            findPath(kiw + (cTile - 1),wirs - (y-1))
                            sleep(1000)
                            local count = 0
                            reconnect(world,door,kiw + (cTile - 1),wirs - (y-1))
                            while findItem(pack) > 0 do
                                drop(pack)
                                sleep(setting.delay.drop)
                                reconnect(world,door,kiw + (cTile - 1),wirs - (y-1))
                                count = count + 1
                                if count >= 2 then
                                    cTile = cTile + 1
                                    goto packzz
                                end
                            end
                        end
                        if findItem(pack) == 0 then
                            break
                        end
                    end
                    sleep(100)
                    break
                else
                    for i,tile in pairs(getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::packz::
                            findPath(kiw + (cTile - 1),wirs)
                            sleep(1000)
                            local count = 0
                            reconnect(world,door,kiw + (cTile - 1),wirs)
                            while findItem(pack) > 0 do
                                drop(pack)
                                sleep(setting.delay.drop)
                                reconnect(world,door,kiw + (cTile - 1),wirs)
                                count = count + 1
                                if count >= 2 then
                                    cTile = cTile + 1
                                    goto packz
                                end
                            end
                        end
                        if findItem(pack) == 0 then
                            break
                        end
                    end
                    sleep(100)
                    break
                end
            end
        end
    end
    webpack(setting.webhook.pack.link,setting.webhook.pack.messageid)
    sleep(150)
    setJob(setting.typeMode)
end

function spevent(worlds)
    for y,items in pairs(setting.item.event) do
        for i = eventt , #setting.storage.event.world do
            setJob('Storing special items')
            door = setting.storage.event.door
            warp(setting.storage.event.world[i],door)
            webcuy('Storing special items',task,messageid)
            if gscan(items) >= setting.storage.event.limit then
                infokand(setting.webhook.status,'[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
                eventt = eventt + 1
                if eventt > #setting.storage.event.world then
                    infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                    if setting.mode.removeBot then
						removeBot(getBot().name)
						sleep(100)
					end
					error()
                end
            else
                if setting.mode.separated then
                    for i,tile in pairs(getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::iye::
                            findPath(bar + (dTile - 1),nich - (y-1))
                            sleep(1000)
                            local count = 0
                            reconnect(world,door,bar + (dTile - 1),nich - (y-1))
                            while findItem(items) > 0 do
                                drop(items)
                                sleep(setting.delay.drop)
                                reconnect(world,door,bar + (dTile - 1),nich - (y-1))
                                count = count + 1
                                if count >= 2 then
                                    dTile = dTile + 1
                                    goto iye
                                end
                            end
                        end
                        if findItem(items) == 0 then
                            break
                        end
                    end
                    sleep(100)
                    break
                else
                    for i,tile in pairs(getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::alamaks::
                            findPath(bar + (dTile - 1),nich)
                            sleep(1000)
                            local count = 0
                            reconnect(world,door,bar + (dTile - 1),nich)
                            while findItem(items) > 0 do
                                drop(items)
                                sleep(setting.delay.drop)
                                reconnect(world,door,bar + (dTile - 1),nich)
                                count = count + 1
                                if count >= 2 then
                                    dTile = dTile + 1
                                    goto alamaks
                                end
                            end
                        end
                        if findItem(items) == 0 then
                            break
                        end
                    end
                    sleep(100)
                    break
                end
            end
        end
    end
    webpack(setting.webhook.event.link,setting.webhook.event.messageid)
    sleep(150)
    setJob(setting.typeMode)
end

function scanTree(id)
    local count = 0
    for _, tile in pairs(getTiles()) do
        if tile.fg == id and not tile.ready then
            count = count + 1
        end
    end
    return count
end

function scanTrees(id)
    local count = 0
    for _, tile in pairs(getTiles()) do
        if tile.fg == id and tile.ready then
            count = count + 1
        end
    end
    return count
end	

function dropwir(worlds)
    for i = blockk , #setting.storage.block.world do
        setJob('Storing Blocks')
        door = setting.storage.block.door
        warp(setting.storage.block.world[i],door)
        webcuy('Storing blocks',task,messageid)
        if gscan(setting.item.block) >= setting.storage.block.limit then
            infokand(setting.webhook.status,'[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
            blockk = blockk + 1
            if blockk > #setting.storage.block.world then
                infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
        else
            for i,tile in pairs(getTiles()) do
                if tile.bg == 0 or tile.fg == 0 then
                    ::back::
                    findPath(mang + (iTile - 1),eak)
                    sleep(1000)
                    local count = 0
                    reconnect(world,door,mang + (iTile - 1),eak)
                    while findItem(setting.item.block) > 0 do
                        drop(setting.item.block)
                        sleep(setting.delay.drop)
                        reconnect(world,door,mang + (iTile - 1),eak)
                        count = count + 1
                        if count >= 2 then
                            iTile = iTile + 1
                            goto back
                        end
                    end
                end
                if findItem(setting.item.block) == 0 then
                    break
                end
            end
            sleep(100)
            break
        end
    end
    webpack(setting.webhook.block.link,setting.webhook.block.messageid)
    sleep(150)
    setJob(setting.typeMode)
end

function dropwirs(worlds)
    for i = seedd , #setting.storage.seed.world do
        setJob('Storing Seeds')
        door = setting.storage.seed.door
        warp(setting.storage.seed.world[i],door)
        webcuy('Storing seed',task,messageid)
        if gscan(setting.item.seed) >= setting.storage.seed.limit then
            infokand(setting.webhook.status,'[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
            seedd = seedd + 1
            if seedd > #setting.storage.seed.world then
                infokand(setting.webhook.status,"ALL STORAGE IS REACHED LIMIT !!! @everyone")
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
        else
            for i,tile in pairs(getTiles()) do
                if tile.bg == 0 or tile.fg == 0 then
                    ::wirs::
                    findPath(ak + (bTile - 1),wir)
                    sleep(1000)
                    local count = 0
                    reconnect(world,door,ak + (bTile - 1),wir)
                    while findItem(setting.item.seed) > 0 do
                        drop(setting.item.seed)
                        sleep(setting.delay.drop)
                        reconnect(world,door,ak + (bTile - 1),wir)
                        count = count + 1
                        if count >= 2 then
                            bTile = bTile + 1
                            goto wirs
                        end
                    end
                end
                if findItem(setting.item.seed) == 0 then
                    break
                end
            end
            sleep(100)
            break
        end	
    end
    webpack(setting.webhook.seed.link,setting.webhook.seed.messageid)
    sleep(150)
    setJob(setting.typeMode)
end

function harvestOrCollect(worlds)
    if setting.mode.ignoregems then
        setBool('Ignore Gems', true)
        sleep(150)
        collectSet(true,setting.mode.range)
        sleep(150)
    else
        collectSet(true,setting.mode.range)
        sleep(150)
    end
    if setting.typeMode == 'harvest' then
        if mode == 'up' then
            t1 = 99
            t2 = 0
            t3 = -1
            tiles = 0
            for y = -1, 53 do
                for x = t1, t2, t3 do
                    if getTile(x,y).fg == setting.item.seed and getTile(x,y).ready then
                        if findItem(setting.item.block) >= 180 then
                            collectSet(false)
                            sleep(150)
                            dropwir(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            if setting.mode.ignoregems then
                                setBool('Ignore Gems', true)
                                sleep(150)
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            else
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            end
                            webcuy('Harvest mode : '..mode..'',task,messageid)
                            sleep(100)
                        elseif findItem(setting.item.event[1]) >= setting.item.amount then
                            collectSet(false)
                            sleep(150)
                            spevent(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            if setting.mode.ignoregems then
                                setBool('Ignore Gems', true)
                                sleep(150)
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            else
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            end
                            webcuy('Harvest mode : '..mode..'',task,messageid)
                            sleep(100)
                        elseif findItem(setting.item.seed) > 50 then
                            collectSet(false)
                            sleep(150)
                            dropwirs(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            if setting.mode.ignoregems then
                                setBool('Ignore Gems', true)
                                sleep(150)
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            else
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            end
                            webcuy('Harvest mode : '..mode..'',task,messageid)
                            sleep(100)
                        elseif findItem(112) >= setting.pack.mingems then
                            collectSet(false)
                            sleep(150)
                            buy(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            if setting.mode.ignoregems then
                                setBool('Ignore Gems', true)
                                sleep(150)
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            else
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            end
                            webcuy('Harvest mode : '..mode..'',task,messageid)
                            sleep(100) 
                        end
                        findPath(x,y)
                        while getTile(x,y).fg == setting.item.seed do
                            punch(0,0)
                            sleep(setting.delay.harvest)
                            door = idList
                            reconnect(worlds,door,x,y)
                        end
                    end
                end
                if tiles == 1 then
                    if t1 == 0 then
                        t1 = 99
                        t2 = 0
                        t3 = -1
                        tiles = 0
                    elseif t1 == 99 then
                        t1 = 0
                        t2 = 99
                        t3 = 1
                        tiles = 0
                    end
                elseif tiles == 0 then
                    tiles = tiles + 1
                end
            end
        elseif mode == 'down' then
            t1 = 99
            t2 = 0
            t3 = -1
            tiles = 0
            for y = 53, 0, -1 do
                for x = t1, t2, t3 do
                    if getTile(x,y).fg == setting.item.seed and getTile(x,y).ready then
                        if findItem(setting.item.block) >= 180 then
                            collectSet(false)
                            sleep(150)
                            dropwir(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            if setting.mode.ignoregems then
                                setBool('Ignore Gems', true)
                                sleep(150)
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            else
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            end
                            webcuy('Harvest mode : '..mode..'',task,messageid)
                            sleep(100)
                        elseif findItem(setting.item.event[1]) >= setting.item.amount then
                            collectSet(false)
                            sleep(150)
                            spevent(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            if setting.mode.ignoregems then
                                setBool('Ignore Gems', true)
                                sleep(150)
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            else
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            end
                            webcuy('Harvest mode : '..mode..'',task,messageid)
                            sleep(100)
                        elseif findItem(setting.item.seed) > 50 then
                            collectSet(false)
                            sleep(150)
                            dropwirs(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            if setting.mode.ignoregems then
                                setBool('Ignore Gems', true)
                                sleep(150)
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            else
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            end
                            webcuy('Harvest mode : '..mode..'',task,messageid)
                            sleep(100)
                        elseif findItem(112) >= setting.pack.mingems then
                            collectSet(false)
                            sleep(150)
                            buy(worlds)
                            door = idList
                            warp(worlds,door)
                            sleep(150)
                            if setting.mode.ignoregems then
                                setBool('Ignore Gems', true)
                                sleep(150)
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            else
                                collectSet(true,setting.mode.range)
                                sleep(150)
                            end
                            webcuy('Harvest mode : '..mode..'',task,messageid)
                            sleep(100)
                        end
                        findPath(x,y)
                        while getTile(x,y).fg == setting.item.seed do
                            punch(0,0)
                            sleep(setting.delay.harvest)
                            door = idList
                            reconnect(worlds,door,x,y)
                        end
                    end
                end
                if tiles == 1 then
                    if t1 == 0 then
                        t1 = 99
                        t2 = 0
                        t3 = -1
                        tiles = 0
                    elseif t1 == 99 then
                        t1 = 0
                        t2 = 99
                        t3 = 1
                        tiles = 0
                    end
                elseif tiles == 0 then
                    tiles = tiles + 1
                end
            end
        end
    elseif setting.typeMode == 'collect' then
        webcuy('Collecting',task,messageid)
        sleep(100)
        for _, obj in pairs(getObjects()) do
            if obj.id == setting.item.block then
                if gscan(setting.item.block) < 1 then
                    break
                end
                findPath(round(obj.x / 32),math.floor(obj.y / 32))
                sleep(setting.delay.collect)
            end
            if findItem(setting.item.block) >= 180 then
                collectSet(false)
                sleep(150)
                dropwir(worlds)
                door = idList
                warp(worlds,door)
                sleep(150)
                if setting.mode.ignoregems then
                    setBool('Ignore Gems', true)
                    sleep(150)
                    collectSet(true,setting.mode.range)
                    sleep(150)
                else
                    collectSet(true,setting.mode.range)
                    sleep(150)
                end
                webcuy('Collecting',task,messageid)
                sleep(100)
            elseif findItem(setting.item.event[1]) >= setting.item.amount then
                collectSet(false)
                sleep(150)
                spevent(worlds)
                door = idList
                warp(worlds,door)
                sleep(150)
                if setting.mode.ignoregems then
                    setBool('Ignore Gems', true)
                    sleep(150)
                    collectSet(true,setting.mode.range)
                    sleep(150)
                else
                    collectSet(true,setting.mode.range)
                    sleep(150)
                end
                webcuy('Harvest mode : '..mode..'',task,messageid)
                sleep(100)
            elseif findItem(setting.item.seed) > 50 then
                collectSet(false)
                sleep(150)
                dropwirs(worlds)
                door = idList
                warp(worlds,door)
                sleep(150)
                if setting.mode.ignoregems then
                    setBool('Ignore Gems', true)
                    sleep(150)
                    collectSet(true,setting.mode.range)
                    sleep(150)
                else
                    collectSet(true,setting.mode.range)
                    sleep(150)
                end
                webcuy('Collecting',task,messageid)
                sleep(100)
            elseif findItem(112) >= setting.pack.mingems then
                collectSet(false)
                sleep(150)
                buy(worlds)
                door = idList
                warp(worlds,door)
                sleep(150)
                if setting.mode.ignoregems then
                    setBool('Ignore Gems', true)
                    sleep(150)
                    collectSet(true,setting.mode.range)
                    sleep(150)
                else
                    collectSet(true,setting.mode.range)
                    sleep(150)
                end
                webcuy('Collecting',task,messageid)
                sleep(100)
            end
        end
    end
end

if BizzantiuM.version == '1.2' and BizzantiuM.maker == 'akbarsht' then
    for i = startfrom,#farmList do
        door = idList
        setJob("Harvest")
        warp(farmList[i],door)
        if not nuked then
            webcuy('Running script type : '..setting.typeMode..'',task,messageid)
            
            harvestOrCollect(farmList[i])
			wirz[farmList[i]] = "```"..alamak(os.difftime(os.time(),st)).."```"
		else
			wirz[farmList[i]] = 'NUKED'
            nuked = false
            sleep(2500)
		end
    end
end
print('ALREADY FINISHED ALL WORLD, Terminated script ! ')
webcuy('ALREADY FINISHED ALL WORLD !! @everyone',task,messageid)
sleep(150)
if setting.mode.removeBot then
    removeBot(getBot().name)
    sleep(150)
end
error()
